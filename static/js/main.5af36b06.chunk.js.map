{"version":3,"sources":["store/reducers/auth/types.ts","utils/rules.ts","hooks/useTypedSelector.ts","store/reducers/event/types.ts","Api/UserService.ts","store/reducers/auth/action-creators.ts","store/reducers/event/action-creators.ts","routes/index.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/LoginForm.tsx","pages/Login.tsx","utils/date.ts","components/EventCalendar.tsx","components/EventForm.tsx","pages/Event.tsx","components/About.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["AuthActionsEnum","rules","message","required","validator","_","value","isSameOrAfter","moment","Promise","resolve","reject","Error","useTypedSelector","useSelector","EventActionEnum","UserService","axios","get","AuthActionCreators","setUser","user","type","SET_USER","payload","setIsAuth","auth","SET_AUTH","setIsLoading","SET_IS_LOADING","setError","SET_ERROR","login","username","password","dispatch","a","setTimeout","getUsers","response","mockUser","data","find","localStorage","setItem","e","logout","removeItem","RouteNames","EventActionCreators","setGuests","SET_GUESTS","setEvents","SET_EVENTS","fetchGuests","console","log","createEvent","event","events","getItem","json","JSON","parse","push","stringify","fetchEvents","currentUserEvents","filter","ev","author","guest","allActionCreators","useActions","useDispatch","bindActionCreators","LoginForm","state","error","isLoading","useState","setUsername","setPassword","onFinish","style","color","Item","label","name","onChange","currentTarget","htmlType","loading","Login","justify","align","className","formatDate","date","year","getFullYear","month","getMonth","day","getDay","getDate","EventCalendar","props","dateCellRender","formatedDate","toDate","currentDayEvents","map","index","text","description","EventForm","setEvent","submit","selectDate","guests","Option","Event","modalVisible","setModalVisible","useEffect","onClick","title","visible","footer","onCancel","About","margin","position","top","fontSize","marginTop","publicRoutes","path","LOGIN","exact","component","ABOUT","privateRoutes","EVENT","AppRouter","isAuth","route","to","Navbar","router","useHistory","Header","theme","mode","selectable","marginRight","App","Content","initialState","action","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5af36b06.chunk.js","sourcesContent":["import {IUser} from \"../../../models/IUser\";\r\n\r\n\r\nexport interface AuthState {\r\n    isAuth: boolean;\r\n    user: IUser;\r\n    isLoading: boolean;\r\n    error: string\r\n}\r\n\r\nexport enum AuthActionsEnum {\r\n    SET_AUTH = 'SET_AUTH',\r\n    SET_ERROR = 'SET_ERROR',\r\n    SET_USER = 'SET_USER',\r\n    SET_IS_LOADING = 'SET_IS_LOADING'\r\n}\r\n\r\nexport interface SetAuthAction {\r\n    type: AuthActionsEnum.SET_AUTH,\r\n    payload: boolean\r\n}\r\n\r\nexport interface SetErrorAction {\r\n    type: AuthActionsEnum.SET_ERROR,\r\n    payload: string\r\n}\r\n\r\nexport interface SetUserAction {\r\n    type: AuthActionsEnum.SET_USER,\r\n    payload: IUser\r\n}\r\n\r\nexport interface SetIsLoadingAction {\r\n    type: AuthActionsEnum.SET_IS_LOADING,\r\n    payload: boolean\r\n}\r\n\r\nexport type AuthAction =\r\n    SetAuthAction |\r\n    SetErrorAction |\r\n    SetUserAction |\r\n    SetIsLoadingAction;","\r\nimport moment, {Moment} from \"moment\";\r\n\r\n\r\nexport const rules = {\r\n    required: (message: string) => ({\r\n        required: true,\r\n        message\r\n    }),\r\n    isDateAfter: (message: string) => () => ({\r\n            validator(_: any, value: Moment ) {\r\n                if (value.isSameOrAfter(moment())) {\r\n                    return Promise.resolve()\r\n                }\r\n                return Promise.reject(new Error(message))\r\n            }\r\n    })\r\n}\r\n","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import {IUser} from \"../../../models/IUser\";\r\nimport {IEvent} from \"../../../models/IEvent\";\r\n\r\n\r\nexport interface EventState {\r\n    guests: IUser[];\r\n    events: IEvent[];\r\n}\r\n\r\nexport enum EventActionEnum {\r\n    SET_GUESTS = \"SET_GUESTS\",\r\n    SET_EVENTS = \"SET_EVENTS\"\r\n}\r\n\r\nexport interface SetGuestAction {\r\n    type: EventActionEnum.SET_GUESTS;\r\n    payload: IUser[]\r\n}\r\n\r\nexport interface SetEventsAction {\r\n    type: EventActionEnum.SET_EVENTS;\r\n    payload: IEvent[]\r\n}\r\n\r\nexport type EventAction =\r\n    SetGuestAction | SetEventsAction","import axios, { AxiosResponse} from \"axios\";\r\nimport {IUser} from \"../models/IUser\";\r\n\r\n\r\nexport default class UserService {\r\n    static async getUsers(): Promise<AxiosResponse<IUser[]>> {\r\n        return axios.get<IUser[]>('./users.json')\r\n    }\r\n}","import {IUser} from \"../../../models/IUser\";\r\nimport {AuthActionsEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetUserAction} from \"./types\";\r\nimport {AppDispatch} from \"../../index\";\r\nimport UserService from \"../../../Api/UserService\";\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user: IUser): SetUserAction => ({type: AuthActionsEnum.SET_USER, payload: user}),\r\n    setIsAuth: (auth: boolean): SetAuthAction => ({type: AuthActionsEnum.SET_AUTH, payload: auth}),\r\n    setIsLoading: (payload: boolean): SetIsLoadingAction => ({type: AuthActionsEnum.SET_IS_LOADING, payload}),\r\n    setError: (payload: string): SetErrorAction => ({type: AuthActionsEnum.SET_ERROR, payload}),\r\n\r\n    login: (username: string, password: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            dispatch(AuthActionCreators.setIsLoading(true));\r\n            setTimeout(async () => {\r\n                const response = await UserService.getUsers();\r\n                const mockUser = response.data.find(user => user.username === username && user.password === password)\r\n                if (mockUser) {\r\n                    localStorage.setItem('auth', 'true')\r\n                    localStorage.setItem('username', mockUser.username)\r\n                    dispatch(AuthActionCreators.setUser(mockUser))\r\n                    dispatch(AuthActionCreators.setIsAuth(true))\r\n\r\n                } else {\r\n                    dispatch(AuthActionCreators.setError('incorrect login or password'))\r\n                }\r\n            }, 1000)\r\n            dispatch(AuthActionCreators.setIsLoading(false));\r\n        } catch (e) {\r\n            dispatch(AuthActionCreators.setError('An error occurred while logging in'))\r\n        }\r\n\r\n    },\r\n    logout: () => async (dispatch: AppDispatch) => {\r\n\r\n            localStorage.removeItem(\"auth\")\r\n            localStorage.removeItem(\"username\")\r\n            dispatch(AuthActionCreators.setUser({} as IUser));\r\n            dispatch(AuthActionCreators.setIsAuth(false))\r\n\r\n    }\r\n}","import {IUser} from \"../../../models/IUser\";\r\nimport {EventActionEnum, SetEventsAction, SetGuestAction} from \"./types\";\r\nimport {IEvent} from \"../../../models/IEvent\";\r\nimport {AppDispatch} from \"../../index\";\r\nimport UserService from \"../../../Api/UserService\";\r\n\r\n\r\nexport const EventActionCreators = {\r\n    setGuests: (payload: IUser[]): SetGuestAction => ({type: EventActionEnum.SET_GUESTS, payload}),\r\n    setEvents: (payload: IEvent[]): SetEventsAction => ({type: EventActionEnum.SET_EVENTS, payload}),\r\n\r\n    fetchGuests: () => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const response = await UserService.getUsers()\r\n            dispatch(EventActionCreators.setGuests(response.data))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n    createEvent: (event: IEvent) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem(\"events\") || '[]'\r\n            const json = JSON.parse(events) as IEvent[];\r\n            json.push(event);\r\n            dispatch(EventActionCreators.setEvents(json));\r\n            localStorage.setItem('events', JSON.stringify(json));\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    },\r\n    fetchEvents: (username: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const events = localStorage.getItem(\"events\") || '[]'\r\n            const json = JSON.parse(events) as IEvent[];\r\n            const currentUserEvents = json.filter(ev=> ev.author === username ||\r\n            ev.guest === username)\r\n            dispatch(EventActionCreators.setEvents(currentUserEvents))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Login from \"../pages/Login\";\r\nimport Event from \"../pages/Event\";\r\nimport About from \"../components/About\";\r\n\r\nexport interface IRoute {\r\n    path: string\r\n    component: React.ComponentType;\r\n    exact?: boolean\r\n}\r\n\r\nexport enum RouteNames {\r\n    ABOUT = '/about',\r\n    LOGIN = '/login',\r\n    EVENT = '/'\r\n}\r\n\r\n\r\nexport const publicRoutes: IRoute[] = [\r\n    {path: RouteNames.LOGIN, exact: true, component: Login},\r\n    {path: RouteNames.ABOUT, exact: true, component: About}\r\n]\r\n\r\nexport const privateRoutes : IRoute[] = [\r\n    {path: RouteNames.EVENT, exact: true, component: Event},\r\n    {path: RouteNames.ABOUT, exact: true, component: About}\r\n]","import {AuthActionCreators} from \"./auth/action-creators\";\r\nimport {EventActionCreators} from \"./event/action-creators\";\r\n\r\n\r\nexport const allActionCreators = {\r\n    ...AuthActionCreators,\r\n    ...EventActionCreators\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {allActionCreators} from \"../store/reducers/action-creators\";\r\n\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(allActionCreators, dispatch)\r\n}","import React, {FC, useState} from 'react';\r\nimport {Button, Form, Input} from \"antd\";\r\nimport {rules} from \"../utils/rules\";\r\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\r\nimport {useActions} from \"../hooks/useActions\";\r\n\r\nconst LoginForm: FC = () => {\r\n    const {error, isLoading} = useTypedSelector(state => state.auth)\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const {login} = useActions()\r\n\r\n    const submit = () => {\r\n     login(username, password)\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onFinish={submit}\r\n        >\r\n            {error && <div style={{color: \"red\"}}>\r\n                {error}\r\n            </div>}\r\n            <Form.Item\r\n                label='Username'\r\n                name='username'\r\n                rules={[rules.required('Please enter your name')]}\r\n            >\r\n                <Input value={username}\r\n                       onChange={(e) => setUsername(e.currentTarget.value)}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Password'\r\n                name='password'\r\n                rules={[rules.required('Please enter your password')]}\r\n            >\r\n                <Input value={password}\r\n                       onChange={(e) => setPassword(e.currentTarget.value)}\r\n                       type={\"password\"}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\"\r\n                        loading={isLoading}\r\n                >\r\n                    Sign in\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, {FC} from 'react';\r\nimport {Card, Layout, Row} from \"antd\";\r\nimport LoginForm from \"../components/LoginForm\";\r\n\r\nconst Login: FC = () => {\r\n    return (\r\n        <Layout>\r\n            <Row justify='center' align='middle' className='h100'>\r\n                <Card>\r\n                    <LoginForm/>\r\n                </Card>\r\n\r\n            </Row>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Login;","\r\n\r\n\r\nexport const formatDate = (date: Date): string => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\r\n    const day = date.getDay() < 10 ? `0${date.getDate()}` : date.getDate()\r\n    return  `${year}.${month}.${day}`\r\n}","import React, {FC} from 'react';\r\nimport {Badge, Calendar} from \"antd\";\r\nimport {IEvent} from \"../models/IEvent\";\r\nimport {Moment} from \"moment\";\r\nimport {formatDate} from \"../utils/date\";\r\n\r\ninterface EventCalendarProps {\r\n    events: IEvent[]\r\n}\r\n\r\nconst EventCalendar: FC<EventCalendarProps> = (props) => {\r\n\r\n    const dateCellRender =(value: Moment)=> {\r\n       const formatedDate = formatDate(value.toDate());\r\n       const currentDayEvents = props.events.filter(ev => ev.date === formatedDate);\r\n        return (\r\n           <ul >\r\n               {currentDayEvents.map((ev, index)=>\r\n               <li key={index}>\r\n                   <Badge text={ev.description}/>{ev.description}\r\n               </li>\r\n               )}\r\n           </ul>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Calendar\r\n            dateCellRender={dateCellRender}\r\n        />\r\n    );\r\n};\r\n\r\nexport default EventCalendar;","import React, {FC, useState} from 'react';\r\nimport {Button, DatePicker, Form, Input, Row, Select} from \"antd\";\r\nimport {rules} from \"../utils/rules\";\r\nimport {IUser} from \"../models/IUser\";\r\nimport {IEvent} from \"../models/IEvent\";\r\nimport {Moment} from 'moment';\r\nimport {formatDate} from \"../utils/date\";\r\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\r\n\r\n\r\ninterface EventFormProps {\r\n    guests: IUser[],\r\n    submit: (event: IEvent) => void\r\n}\r\n\r\n\r\nconst EventForm: FC<EventFormProps> = (props) => {\r\n\r\n    const [event, setEvent] = useState<IEvent>({\r\n        author: '',\r\n        date: '',\r\n        description: '',\r\n        guest: ''\r\n    } as IEvent);\r\n\r\n    const {user} = useTypedSelector(state => state.auth)\r\n\r\n    const selectDate = (date: Moment | null) => {\r\n        if (date) {\r\n            setEvent({...event, date: formatDate(date.toDate())})\r\n        }\r\n    }\r\n\r\n    const submitForm = () => {\r\n        props.submit({...event, author: user.username})\r\n    }\r\n\r\n    return (\r\n        <Form onFinish={submitForm}>\r\n            <Form.Item\r\n                label='Description event'\r\n                name='description'\r\n                rules={[rules.required('Required')]}\r\n            >\r\n                <Input\r\n                    value={event.description}\r\n                    onChange={(e) =>\r\n                        setEvent({...event, description: e.currentTarget.value})}/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label='Date event'\r\n                name='date'\r\n                rules={[rules.required('Required'),\r\n                rules.isDateAfter('cannot create an event in the past')\r\n                ]}\r\n            >\r\n                <DatePicker\r\n\r\n                    onChange={(date) => selectDate(date)}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label='Select guest'\r\n                name='guest'\r\n                rules={[rules.required('Required')]}\r\n            >\r\n                <Select\r\n                    onChange={(guest: string) => setEvent({...event, guest})}>\r\n                    {props.guests.map(guest =>\r\n                        <Select.Option\r\n                            key={guest.username}\r\n                            value={guest.username}>\r\n                            {guest.username}\r\n                        </Select.Option>\r\n                    )}\r\n\r\n                </Select>\r\n            </Form.Item>\r\n\r\n\r\n            <Row justify=\"end\">\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\"\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </Form.Item>\r\n            </Row>\r\n\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default EventForm;","import React, {FC, useEffect, useState} from 'react';\r\nimport EventCalendar from \"../components/EventCalendar\";\r\nimport {Button, Layout, Modal, Row} from \"antd\";\r\nimport EventForm from \"../components/EventForm\";\r\nimport {useActions} from \"../hooks/useActions\";\r\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\r\nimport {IEvent} from \"../models/IEvent\";\r\n\r\nconst Event: FC = () => {\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const {fetchGuests, createEvent, fetchEvents} = useActions()\r\n    const {guests, events} = useTypedSelector(state => state.event)\r\n    const {user} = useTypedSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        fetchGuests()\r\n        fetchEvents(user.username)\r\n    }, [])\r\n\r\n    const addNewEvent = (event: IEvent) => {\r\n        setModalVisible(false);\r\n       createEvent(event)\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n\r\n            <EventCalendar events={events}/>\r\n            <Row justify=\"center\">\r\n\r\n                <Button type=\"primary\"\r\n                    onClick={() => setModalVisible(true)}\r\n                >Add event</Button>\r\n            </Row>\r\n\r\n            <Modal\r\n                title=\"Add event\"\r\n                visible={modalVisible}\r\n                footer={null}\r\n                onCancel={() => setModalVisible(false)}\r\n            >\r\n                <EventForm\r\n                guests={guests}\r\n                submit={addNewEvent}\r\n                />\r\n            </Modal>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Event;","import React, {FC} from 'react';\r\n\r\nconst About: FC = () => {\r\n    return (\r\n        <div>\r\n            <div style={{margin: \"20px\", position: \"relative\"}}>\r\n                <h2>This application is made using technologies such as:</h2>\r\n                <span style={{position: \"absolute\",top: \"25px\", fontSize: \"smaller\"}}>ver.1.0.42</span>\r\n            </div>\r\n            <div style={{marginTop: \"20px\"}}>\r\n                <ul>\r\n                    <li>React + TypeScript</li>\r\n                    <li>Hooks: useState, useEffect, useSelector, useDispatch. Custom hooks</li>\r\n                    <li>Redux, React redux typescript, Thunk.</li>\r\n                    <li>React router. Page navigation. BrowserRouter, Route, Switch, Redirect.</li>\r\n                    <li>Conditional rendering.</li>\r\n                    <li>Decomposition</li>\r\n                    <li>Working with the server(mock Data). Axios. JSON. Save in Local Storage</li>\r\n                    <li>Modal window.</li>\r\n                    <li>User authorization.</li>\r\n                    <li>Working with calendar \\ events</li>\r\n                    <li>Ant Design</li>\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {privateRoutes, publicRoutes, RouteNames} from \"../routes\";\r\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\r\n\r\nconst AppRouter = () => {\r\n    const {isAuth} = useTypedSelector(state => state.auth)\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            {isAuth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route =>\r\n                    <Route\r\n                        key={route.path}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={route.component}\r\n                    />)}\r\n                <Redirect to={RouteNames.EVENT}/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route =>\r\n                    <Route\r\n                        key={route.path}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        component={route.component}\r\n                    />\r\n                )}\r\n                <Redirect to={RouteNames.LOGIN}/>\r\n            </Switch>}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import {Layout, Menu, Row} from 'antd';\r\nimport React, {FC} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {RouteNames} from \"../routes\";\r\nimport {useTypedSelector} from \"../hooks/useTypedSelector\";\r\nimport {useActions} from \"../hooks/useActions\";\r\n\r\nconst Navbar: FC = () => {\r\n    const router = useHistory()\r\n    const {isAuth, user} = useTypedSelector(state => state.auth)\r\n    const {logout} = useActions()\r\n\r\n    return (\r\n        <Layout.Header>\r\n\r\n            <Row justify='end'>\r\n\r\n                {isAuth\r\n                    ? <>\r\n                        <Menu theme='dark' mode='vertical' selectable={false}\r\n                              style={{ marginTop: \"8px\"}}\r\n                        >\r\n                            <Menu.Item\r\n                                onClick={() => router.push(RouteNames.ABOUT)}\r\n\r\n                            >About\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                        <Menu theme='dark' mode='vertical' selectable={false}  style={{ margin: \" 8px  100px 0px 0px\"}}>\r\n                            <Menu.Item\r\n                                onClick={() => router.push(RouteNames.EVENT)}\r\n                                key={1}\r\n                            >Main\r\n                            </Menu.Item>\r\n                        </Menu>\r\n\r\n                        <div style={{color: 'white', marginRight: \"20px\"}} >{user.username}</div>\r\n\r\n\r\n\r\n                        <Menu theme='dark' mode='horizontal' selectable={false}>\r\n                            <Menu.Item\r\n                                onClick={logout}\r\n                                key={1}\r\n                            >Logout\r\n                            </Menu.Item>\r\n                        </Menu>\r\n\r\n                    </>\r\n                    : <Menu theme='dark' mode='vertical' selectable={false}>\r\n                        <Menu.Item\r\n                            onClick={() => router.push(RouteNames.LOGIN)}\r\n                            key={1}\r\n                        >Login\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }\r\n\r\n            </Row>\r\n        </Layout.Header>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {useEffect} from 'react';\nimport './App.css';\nimport AppRouter from \"./components/AppRouter\";\nimport Navbar from \"./components/Navbar\";\nimport {Layout} from \"antd\";\nimport {useActions} from \"./hooks/useActions\";\nimport {IUser} from \"./models/IUser\";\n\nfunction App() {\n\n    const {setUser, setIsAuth} = useActions()\n\n    useEffect(() => {\n        if (localStorage.getItem('auth')) {\n            setUser({username: localStorage.getItem('username' || '')} as IUser)\n            setIsAuth(true)\n        }\n\n\n    }, [])\n\n    return (\n        <Layout>\n            <Navbar/>\n            <Layout.Content>\n                <AppRouter/>\n            </Layout.Content>\n\n        </Layout>\n    );\n}\n\nexport default App;\n","import {AuthAction, AuthActionsEnum, AuthState} from \"./types\";\r\nimport {IUser} from \"../../../models/IUser\";\r\n\r\n\r\nconst initialState: AuthState = {\r\n    isAuth: false,\r\n    error: '',\r\n    user: {} as IUser,\r\n    isLoading: false\r\n}\r\n\r\nexport default function  authReducer(state = initialState, action: AuthAction): AuthState {\r\n    switch (action.type) {\r\n        case AuthActionsEnum.SET_AUTH:\r\n            return {...state, isAuth: action.payload, isLoading: false}\r\n        case AuthActionsEnum.SET_USER:\r\n            return {...state, user: action.payload}\r\n        case AuthActionsEnum.SET_ERROR:\r\n            return {...state, error: action.payload, isLoading: false}\r\n        case AuthActionsEnum.SET_IS_LOADING:\r\n            return {...state, isLoading: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import {EventAction, EventActionEnum, EventState} from \"./types\";\r\n\r\n\r\nconst initialState: EventState = {\r\n    events: [],\r\n    guests: []\r\n}\r\n\r\nexport default function EventReducer(state = initialState, action: EventAction): EventState {\r\n    switch (action.type) {\r\n        case EventActionEnum.SET_GUESTS:\r\n            return {...state, guests: action.payload}\r\n        case EventActionEnum.SET_EVENTS:\r\n            return {...state, events: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import auth from './auth'\r\nimport event from './event'\r\n\r\nexport default {\r\n    auth,\r\n    event\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst rootReducer = combineReducers(reducers)\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof store.getState >\r\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}